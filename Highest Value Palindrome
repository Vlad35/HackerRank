import java.util.*;

public class Main {
    private static String highestValuePalindrome(String s, int k) {
        int n = s.length();
        if(n == 1 && k >= 1) {
            return "9";
        }
        int i = 0;
        int j = n - 1;
        boolean[] Pro = new boolean[n];
        for(int q = 0;q < Pro.length;q ++) {
            Pro[i] = false;
        }
        while (i <= j) {
            if(s.charAt(i) == s.charAt(j)) {
                continue;
            }else  {
                if(k == 0) {
                    return "-1";
                }
                if(s.charAt(i) > s.charAt(j)) {
                    s = s.replace(s.charAt(j), s.charAt(i));
                    Pro[j] = true;
                }else {
                    s = s.replace(s.charAt(i),s.charAt(j));
                    Pro[i] = true;
                }
                k --;
            }
            i ++;
            j --;
        }
        if(k > 0) {
             i = 0;
             j = n - 1;

             while (i <= j && k > 0) {
                 if(s.charAt(i) == '9') {
                     if(Pro[i] || Pro[j]) {
                         s = s.replace(s.charAt(i),'9');
                         s = s.replace(s.charAt(j), '9');
                         k --;
                     }else {
                         if (k > 1) {
                             s = s.replace(s.charAt(i), '9');
                             s = s.replace(s.charAt(j),'9');
                             k -= 2;
                         }
                     }
                 }
                 i ++;
                 j --;
                 if(i == j && k >= 1) {
                     s = s.replace(s.charAt(i), '9');
                     break;
                 }
             }
        }
        return s;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String s = sc.nextLine();
        int k = sc.nextInt();
        System.out.println(highestValuePalindrome(s,k));
    }
}
